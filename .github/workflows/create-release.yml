name: Create release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout source
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Build, test and pack/publish
      - name: Build and Test
        run: ./Build.ps1
        shell: pwsh

      # Upload artifacts
      - name: Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts.zip
          path: artifacts/**/*

      # Create release with published artifact
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, '-') }} # Prerelease if vX.Y.Z-<any-suffix>
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifacts.zip
          asset_name: artifacts.zip
          asset_content_type: application/zip

      # NuGet publish
      - name: Push to NuGet
        env:
          NUGET_URL: https://api.nuget.org/v3/index.json
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: ./Push.ps1
        shell: pwsh
